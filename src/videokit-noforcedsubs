#!/bin/bash

#
# This file is part of videokit-kde.
# Copyright (C) 2025 Tom Brown
#
# videokit-kde is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# videokit-kde is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#


# masthead

source bashdev-app

APP_NAME=$(basename "$0")
APP_VERSION=0.3.0
APP_AUTHOR="Tom Brown"
APP_YEAR="2025"
APP_LICENSE="GPLv3"
APP_DESC="Remove forced and default subtitle flags (subtitles are preserved but do not display by default)"

app::masthead "$APP_NAME" "$APP_VERSION" "$APP_AUTHOR" "$APP_YEAR" "$APP_LICENSE" "$APP_DESC"


# needed for config information

source videokit-lib


# load videokit config from config file

videokit::configLoad


if [[ "$NO_FORCED_SUBS_DEBUG" == "true" ]]; then

        echo "debug: debugging = $NO_FORCED_SUBS_DEBUG"
        echo "debug: lock file = $NO_FORCED_SUBS_LOCK"
        echo "debug: tolerance = $NO_FORCED_SUBS_TOLERANCE"

fi


# decision tree

RUN=true
INPUT_FILE="$1"


# check for file exists

if [ -z "$INPUT_FILE" ]; then
    echo
    echo "Error: No file specified."
    echo
    RUN=false
fi


# check if file has forced subtitles

if "$RUN"; then

	SUBS=$(ffprobe -v error -select_streams s -show_entries stream=index:stream_tags=language:stream_disposition=default,forced -of json "$INPUT_FILE" | jq '.streams[] | select(.disposition.default == 1 or .disposition.forced == 1) | {index, language: .tags.language, default: .disposition.default, forced: .disposition.forced}')

	if [[ -z "$SUBS" ]]; then
		RUN=false;
		echo "info:  no forced or default subtitles in: " $1
	fi

fi


# strip default and forced subtitle flags from video 

if "$RUN"; then

	# spinlock to serialize multiple execution

	app::processLockSpin $(basename "$0") 201


	# parse the filename

	FILENAME="${INPUT_FILE%.*}"
	EXTENSION="${INPUT_FILE##*.}"
	TARGET_FILE=$FILENAME"_no_forced_subs_."$EXTENSION


	# strip the forced and default sub flags

	echo "info:  stripping subtitles from [$INPUT_FILE]"
	systemd-inhibit --why="Strip subtitles" nice -n 19 ffmpeg -loglevel error -hide_banner -i "$INPUT_FILE" -map 0 -c copy -disposition:s forced -disposition:s none -y "$TARGET_FILE" >/dev/null 2>&1


	# action on result

	if [ $? -eq 0 ]; then

		INPUT_SIZE=$( stat -c %s "$INPUT_FILE")
		TARGET_SIZE=$(stat -c %s "$TARGET_FILE")

		DIFF=$(( $TARGET_SIZE - $INPUT_SIZE ))

		if [ "${DIFF#-}" -le "$NO_FORCED_SUBS_TOLERANCE" ]; then mv "$TARGET_FILE" "$INPUT_FILE"
		else					   				  			echo "error: difference $DIFF between input and target is greater than tolerance $NO_FORCED_SUBS_TOLERANCE"
		fi

	fi

fi


# clean up

app::processUnlock
