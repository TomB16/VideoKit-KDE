#!/bin/bash

#
# This file is part of videokit-kde.
# Copyright (C) 2025 Tom Brown
#
# videokit-kde is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# videokit-kde is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#


# masthead

source bashdev-app

APP_NAME=$(basename "$0")
APP_VERSION=0.3.0
APP_AUTHOR="Tom Brown"
APP_YEAR="2025"
APP_LICENSE="GPLv3"
APP_DESC="Rename file to video title meta data"

app::masthead "$APP_NAME" "$APP_VERSION" "$APP_AUTHOR" "$APP_YEAR" "$APP_LICENSE" "$APP_DESC"


# transcode queue params

source videokit-lib

videokit::configLoad


if [[ "$TITLE2FILE_DEBUG" == "true" ]]; then

        echo "debug:  $TITLE2FILE_DEBUG"
        echo "debug:  Lock file =" $TITLE2FILE_LOCK

fi


# check for file exists

INPUT_FILE="$1"
TITLE=$( mediainfo --Inform="General;%Title%" "$INPUT_FILE" )
if [ -z "$INPUT_FILE" ]; then

    echo "error:   No file specified"

elif [ ! -f "$INPUT_FILE" ]; then

    echo "error:   input file [$INPUT_FILE] not found"

elif [[ -z "$TITLE" ]]; then

	echo "error:  file $INPUT_FILE does not have a metadata title"

else

	# spinlock to serialize multiple execution

	app::processLockSpin $(basename "$0") 203


	# parse the filename

	FPATH=$( dirname "$INPUT_FILE" )
	FILENAME="${INPUT_FILE%.*}"
	EXTENSION="${INPUT_FILE##*.}"

	if [[ "$TITLE2FILE_DEBUG" == "true" ]]; then

		echo "Debug:  source    = $INPUT_FILE"
		echo "Debug:  path      = $FPATH"
		echo "Debug:  filename  = $FILENAME"
		echo "Debug:  extension = $EXTENSION"
		echo "Debug:  title     = $TITLE"

	fi

	TARGET_FILE="$FPATH/$TITLE.$EXTENSION"

	[[ "$TITLE2FILE_DEBUG" == "true" ]]   && echo "debug:  target     = $TARGET_FILE"
	if [[ "$INPUT_FILE" != "$TARGET_FILE" ]]; then

		echo "info:   rename [$INPUT_FILE] to [$TARGET_FILE]"
		mv "$INPUT_FILE" "$TARGET_FILE"

	fi

fi


# clean up

app::processUnlock
